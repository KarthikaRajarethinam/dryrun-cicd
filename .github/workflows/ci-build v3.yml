name: Build & Deploy Selective Microservices Manual

on:
  workflow_dispatch:
    inputs:
      microservices:
        description: 'Comma-separated list of microservices to build and deploy (e.g., microservice-a,microservice-b,frontend)'
        required: true
        default: 'microservice-a,microservice-b,frontend'  t

jobs:
  build-and-deploy:
    name: Build & Deploy Selected Microservices
    runs-on: ubuntu-latest

    environment:
      name: production
      url: https://console.cloud.google.com/artifacts

    permissions:
      contents: read
      id-token: write  # Needed for Workload Identity Federation
      pull-requests: write  # Needed to comment on PR

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Compose v2
        run: |
          mkdir -p ~/.docker/cli-plugins/
          curl -SL https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Authenticate to Google Cloud via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/30467746746/locations/global/workloadIdentityPools/github-wif/providers/github'
          service_account: 'github-wif@das-terraform-dry-run.iam.gserviceaccount.com'

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker australia-southeast1-docker.pkg.dev --quiet

      - name: Ensure Artifact Registry repo exists or create it
        run: |
          set -e
          REPO_NAME="das-docker-repo"
          LOCATION="australia-southeast1"
          PROJECT_ID="das-terraform-dry-run"

          echo "Checking if Artifact Registry repo '$REPO_NAME' exists in '$LOCATION'..."

          if gcloud artifacts repositories describe "$REPO_NAME" --location="$LOCATION" --project="$PROJECT_ID" >/dev/null 2>&1; then
            echo "Repository '$REPO_NAME' already exists."
          else
            echo "Repository '$REPO_NAME' not found. Creating it now..."
            gcloud artifacts repositories create "$REPO_NAME" \
              --repository-format=docker \
              --location="$LOCATION" \
              --description="Docker repo for microservices CI/CD" \
              --project="$PROJECT_ID"
            echo "Repository '$REPO_NAME' created successfully."
          fi

      - name: Manual Service Selection
        id: service-selection
        run: |
          echo "Microservices to build: ${{ github.event.inputs.microservices }}"
          echo "services=${{ github.event.inputs.microservices }}" >> $GITHUB_ENV

      - name: Build and push selected services
        if: env.services != ''
        run: |
          for svc in ${{ env.services }}; do
            echo "::group::Building $svc"
            docker compose -f cloud-dry-run/docker-compose.yml build "$svc"
            echo "::endgroup::"

            echo "::group::Pushing $svc"
            docker compose -f cloud-dry-run/docker-compose.yml push "$svc"
            echo "::endgroup::"

      - name: List recent images from Artifact Registry
        run: |
          for svc in ${{ env.services }}; do
            echo "::group::Images for $svc"
            gcloud artifacts docker images list australia-southeast1-docker.pkg.dev/das-terraform-dry-run/das-docker-repo/$svc \
              --limit=5 \
              --format="table[box](DIGEST, TAGS, IMAGE_SIZE_BYTES, UPLOAD_TIME)"
            echo "::endgroup::"

      - name: Workflow completed
        run: echo "CI/CD workflow completed successfully."
